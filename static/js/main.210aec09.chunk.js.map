{"version":3,"sources":["App.js","components/header.js","assets/images/up-caret.svg","assets/images/nyan.png","serviceWorker.js","index.js","containers/404.js","common/highlighter-config.js","content/css-rules.js","content/css-declaration-order.js","content/html-rules.js","common/utils.js","containers/home.js"],"names":["App","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","basename","className","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","path","exact","component","Header","Home","NoRouteMatch","Component","hot","module","style","fontSize","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","is404","display","justifyContent","alignItems","width","height","color","backgroundColor","cssHighlightProps","language","useInlineStyles","htmlHighlightProps","cssRules","rule","summary","example","default_highlight","Object","assign","CodeTag","PreTag","cssStyeDeclaration","htmlRules","id","copyStringToClipboard","str","el","value","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","slugify","text","toString","toLowerCase","trim","replace","OffsetHashLink","props","lib","scroll","offset","elementPosition","offsetTop","top","scrollWithOffset","children","CategoryHash","to","concat","RuleIteration","Fragment","arr","map","item","i","key","onClick","hash","useEffect","console","log","stickybits","scrollTo","src","require","alt"],"mappings":"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","file":"static/js/main.210aec09.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { \r\n  HashRouter, \r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom'\r\nimport { hot } from 'react-hot-loader'\r\n\r\nimport Header from './components/header'\r\n// import Footer from './components/footer'\r\nimport Home from './containers/home'\r\nimport NoRouteMatch from './containers/404'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <div className=\"App\">\r\n          <Route path=\"/\" exact component={Header} />\r\n          \r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route component={NoRouteMatch} />\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default hot(module)(App);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div>Fullstack HQ - Frontend Handbook</div>\r\n        <div style={{fontSize: '10px'}}>inspired by Code Guide by @mdo</div>\r\n      </header>\r\n    )\r\n  }\r\n}","module.exports = __webpack_public_path__ + \"static/media/up-caret.ed6b5063.svg\";","module.exports = __webpack_public_path__ + \"static/media/nyan.a477a6fa.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from 'react'\r\n\r\nexport default class is404 extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        fontSize: '4vw',\r\n        color: '#fff',\r\n        backgroundColor: '#0d3a58'\r\n      }}>404 Not Found :(</div>\r\n    )\r\n  }\r\n}","export const cssHighlightProps = {\r\n  language: 'scss',\r\n  useInlineStyles: false\r\n}\r\n\r\nexport const htmlHighlightProps = {\r\n  language: 'html',\r\n  useInlineStyles: false\r\n}","import React from 'react'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter'\r\n\r\nimport { cssHighlightProps, htmlHighlightProps } from '../common/highlighter-config'\r\n\r\nconst cssRules = [\r\n  {\r\n    rule: `Add a line break between selectors. Even when they only have a single css property.`,\r\n    summary: `Add a line break between selectors`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`.foo {\r\n  ...\r\n}\r\n\r\n.bar {\r\n  ...\r\n  ...\r\n}`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Avoid !important. Use it only as an absolute last resort.`,\r\n    summary: `Avoid !important`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.foo {\r\n  display: none !important;\r\n}\r\n\r\n//DO\r\n.bar {\r\n  ...\r\n  \r\n  .foo {\r\n    display: none;\r\n  }\r\n}`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Configure dev environment to soft tabs with two (2) spaces.`,\r\n    summary: `Use soft tabs, two spaces`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`.foo {\r\n  display: block;\r\n}`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `When grouping selectors, keep individual selectors to a single line.`,\r\n    summary: `Keep individual selectors to a single line`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.foo, .bar {\r\n  display: block;\r\n}\r\n\r\n//DO\r\n.foo, \r\n.bar {\r\n  display: block;\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: <span>No spaces after commas within <SyntaxHighlighter {...cssHighlightProps} CodeTag=\"span\" PreTag=\"span\">rgb(), rgba(), hsl(), hsla(), or rect()</SyntaxHighlighter> values. This differentiates multiple color values (comma, no space) versus multiple property values (comma with space).</span>,\r\n    summary: `No spaces within color function values`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.foo {\r\n  background-color: rgba(0, 0, 0, .5);\r\n}\r\n\r\n//DO\r\n.foo {\r\n  background-color: rgba(0,0,0,.5);\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `No leading zeroes for property values or color parameters.`,\r\n    summary: `No leading zeroes`,\r\n    example: \r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.foo {\r\n  margin: -0.5px;\r\n\r\n  background-color: rgba(0,0,0,0.5);\r\n}\r\n\r\n//DO\r\n.foo {\r\n  margin: -.5px;\r\n\r\n  background-color: rgba(0,0,0,.5);\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `No units for zeroes (margin: 0; instead of margin: 0px;).`,\r\n    summary: `No units for zeroes`,\r\n    example: \r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.foo {\r\n  margin: 0px;\r\n}\r\n\r\n//DO\r\n.foo {\r\n  margin: 0;\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Use shorthand hex values where possible (e.g., #fff instead of #ffffff).`,\r\n    summary: `Use shorthand hex where possible`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.foo {\r\n  color: #ffffff;\r\n}\r\n\r\n//DO\r\n.foo {\r\n  color: #fff;\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Lowercase all hex values (e.g., #fff).`,\r\n    summary: `Lowercase all hex`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.foo {\r\n  color: #FFF;\r\n}\r\n\r\n//DO\r\n.foo {\r\n  color: #fff;\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Quote attribute values in selectors, e.g., input[type=”text”]. Avoid these selectors when input type is bound to change. Attribute value changes from HTML side will cause style inconsistencies.`,\r\n    summary: `Quote attribute values in selectors`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.selector[type=text] {\r\n  ...\r\n}\r\n\r\n//DO\r\n.selector[type=\"text\"] {\r\n  ...\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Add appropriate cursor types and transitions to all elements with special behaviors`,\r\n    summary: `Add cursor types and transitions`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//<button class=\"click-me\">Clickable</button>\r\n.click-me {\r\n  cursor: pointer;\r\n  transition: color .2s ease-in-out;\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Keep classes lowercase and use dashes (not underscores or camelCase).`,\r\n    summary: `Keep classes lowercase and use dashes`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.fooBar,\r\n.foo_bar {\r\n  ...\r\n}\r\n\r\n//DO\r\n.foo-bar {\r\n  ...\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Keep selectors short and strive to limit the number of elements in each selector to three.`,\r\n    summary: `Keep selectors short`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.section-header-card-wrapper {\r\n  ...\r\n}\r\n\r\n//DO\r\n.card-wrapper {\r\n  ...\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Put a single space between the property and value and no space between the property and the colon.`,\r\n    summary: `Put a single space between property and value`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.foo {\r\n  padding : 1px;\r\n  margin:1px;\r\n}\r\n\r\n//DO\r\n.foo {\r\n  padding: 1px;\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n\r\n  // {\r\n  //   rule: `Reuse your codes as much as possible to minimize the size of files.`,\r\n  // },\r\n  // {\r\n  //   rule: `Mixins are always after the Miscellaneous section for sass (e.g., @include, @extend).`,\r\n  // },\r\n  {\r\n    rule: `Use @extend at the beginning, right after the selector, before declaring other property values. Use other mixins like @include as needed. Be careful with @extend and other custom mixins. Use @extend only when the style is certainly extendable (e.g. buttons, links, etc.)`,\r\n    summary: `Use @extend at the beginning`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`.bar {\r\n  padding: 1px;\r\n  ...\r\n}\r\n\r\n.foo {\r\n  @extend .bar;\r\n\r\n  padding: 2px;\r\n}\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Put all media queries in a block at the very end even if they declare one property only. Put media queries at the parent level, never nested as a child. Arrange from large to small.`,\r\n    summary: `Put all media queries at end, at parent level. Arranged large to small`,\r\n    example:\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.foo {\r\n  ...\r\n\r\n  @include respond-to(lg-down) {\r\n    ...\r\n  }\r\n}\r\n\r\n//DO\r\n.foo {\r\n  ...\r\n}\r\n\r\n@include respond-to(lg-down) {\r\n  ... \r\n}\r\n\r\n@include respond-to(sm-down) {\r\n  ...\r\n}`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  // {\r\n  // \trule: `The rule above can be overruled when the query only applies to a single selector.`,\r\n  // },\r\n  {\r\n    rule: `Nest smartly. Do it only if the children are extremely dependent on a parent element`,\r\n    summary: `Nest smartly`,\r\n    example: \r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.class-a {\r\n  .class-b {\r\n    .class-c {\r\n      ...\r\n    }\r\n  }\r\n\r\n  .class-d {\r\n    ul {\r\n      ...\r\n\r\n      li {\r\n        ...\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//DO\r\n.class-a {\r\n  ...\r\n}\r\n\r\n.class-b {\r\n  ...\r\n}\r\n\r\n.class-c {\r\n  ...\r\n}\r\n\r\n.class-d {\r\n  ul {\r\n    ...\r\n  }\r\n\r\n  li {\r\n    ...\r\n  }\r\n}`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Use classes to avoid deep nesting and for specific context. Except when dealing with 3rd-party plugins/CMS-content-generated HTML nodes where customizing classes is not possible.`,\r\n    summary: `Use classes to avoid deep nesting and for specific context`,\r\n    example: \r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.class-a {\r\n  ...\r\n\r\n  .class-d {\r\n    ...\r\n\r\n    p {\r\n      ...\r\n    }\r\n  }\r\n}\r\n\r\n//DO\r\n.class-a {\r\n  ...\r\n}\r\n\r\n.class-d {\r\n  ...\r\n  \r\n  .class-for-p //p {\r\n    ...\r\n  }\r\n}`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Generic Nesting Guide`,\r\n    summary: `Generic Nesting Guide`,\r\n    example: \r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`.page-container { //i.e. <main class=\"home\">\r\n  .outer-wrapper { //first tab - wrapper\r\n    .child-element { //second tab - child element\r\n      &:hover { //third tab - pseudo-elements\r\n        background-color: #fff;\r\n      }\r\n\r\n      &:before {\r\n        content: 'a';\r\n      }\r\n    }\r\n    \r\n    .child-with-dependent { //second tab - child with extreme dependency\r\n      .i-am-dependent { //third tab - avoid me if you can\r\n        &:hover { //fourth and ideally final tab - pseudo of extreme dependency\r\n          color: #000;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Declare font variants as weights and not separate font families`,\r\n    summary: `Font variants as weights, not separate families`,\r\n    example: \r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`@include font-face($font-proximanova, $base-url + 'fonts/', 'proxima-light', 'proximia-light', 300);\r\n@include font-face($font-proximanova, $base-url + 'fonts/', 'proxima-regular', 'proximia-regular', 400);\r\n@include font-face($font-proximanova, $base-url + 'fonts/', 'proxima-semibold', 'proximia-semibold', 500);\r\n@include font-face($font-proximanova, $base-url + 'fonts/', 'proxima-bold', 'proximia-bold', 600);`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Always use variables for colors, all located at _variables.scss. Use contextual phrases for primary and secondary palettes. Use numerics for neutral shades in increments of 100's`,\r\n    summary: `Use variables for colors, named based on context`,\r\n    example: \r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`$primary-color: #ffc30b;\r\n$secondary-color: #fadase;\r\n\r\n$gray-100: ...\r\n$gray-200: ...\r\n$gray-300: ...\r\n$gray-400: ...`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: <span>\r\n      Limit shorthand declarations to instances where you must explicitly set all the available values. Common overused shorthand properties include:\r\n        <SyntaxHighlighter {...cssHighlightProps}>\r\n{`padding\r\nmargin\r\nfont\r\nbackground\r\nborder\r\nborder-radius`}\r\n        </SyntaxHighlighter>\r\n        Often, we don't need to set all the values a shorthand property represents. For example, HTML headings only set top and bottom margin, so when necessary, only override those two values. Excessive use of shorthand properties often leads to sloppier code with unnecessary overrides and unintended side effects.\r\n    </span>,\r\n    summary: `Limit use of shorthand declarations`,\r\n    example: <SyntaxHighlighter {...cssHighlightProps}>\r\n{`//DON'T\r\n.class {\r\n  font: 400 16px $myfont;\r\n}\r\n\r\n//DO\r\n.class {\r\n  font-family: $myfont;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n}`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    rule: `Whenever efficient, use sass loops and native sass functions.`,\r\n    summary: `Use sass loops and functions`,\r\n    example: <div>\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`//Example:\r\n//Declare $my-item as list\r\n$my-item: red green blue;\r\n\r\n.parent-class {\r\n  //Each loop\r\n  @each $my-item in $my-list {\r\n    //Variable $i assignment via index() sass native function\r\n    $i: index($my-item, $my-list);\r\n    &:nth-of-type(#{$i}) {\r\n      background-color: $my-item;\r\n    }\r\n  }\r\n}\r\n\r\n// Compiles to:\r\n  .parent-class:nth-of-type(1) {\r\n    background-color: red;\r\n  }\r\n\r\n  .parent-class:nth-of-type(2) {\r\n    background-color: green;\r\n  }\r\n\r\n  .parent-class:nth-of-type(3) {\r\n    background-color: blue;\r\n  }\r\n`}\r\n</SyntaxHighlighter>\r\n</div>\r\n  },\r\n  {\r\n    rule: `For dynamic styles, avoid CSS-in-JS. Toggle classes instead.`,\r\n    summary: `Avoid CSS-in-JS`,\r\n    example: <div>\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<!-- DON'T -->\r\n<div class=\"normal js-manipulate\"></div>\r\n<script>\r\n  $('.js-manipulate').click(() => {\r\n    var $this = $(this);\r\n    $this.css('color', 'red');\r\n  })\r\n</script>\r\n\r\n<!-- DO -->\r\n<div class=\"normal js-manipulate\"></div>\r\n<script>\r\n  $('.js-manipulate').click(() => {\r\n    var $this = $(this);\r\n    $this.toggleClass('status-class');\r\n  })\r\n</script>\r\n<style>\r\n  .normal {\r\n    display: block;\r\n\r\n    &.status-class {\r\n      display: none\r\n    }\r\n  }\r\n</style>\r\n`}\r\n</SyntaxHighlighter>\r\n</div>\r\n  },\r\n]\r\n\r\nexport default cssRules","import React from 'react'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter'\r\n\r\nimport { cssHighlightProps } from '../common/highlighter-config'\r\n\r\nconst cssStyeDeclaration = <SyntaxHighlighter {...cssHighlightProps}>\r\n{`.class {\r\n  @extend .another-class;\r\n\r\n/* Positioning */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n\r\n  //ENTER -- code line break\r\n\r\n/* Display */\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-content: center;\r\n  flex-basis: 100%;\r\n  flex-grow: 1;\r\n  flex-shrink: 0;\r\n  order: -1;\r\n  vertical-align: middle;\r\n  float: left;\r\n  clear: both;\r\n  padding: 0;\r\n  padding-top: 0;\r\n  padding-right: 0;\r\n  padding-bottom: 0;\r\n  padding-left: 0;\r\n  margin: 0;\r\n  margin-top: 0;\r\n  margin-right: 0;\r\n  margin-bottom: 0;\r\n  margin-left: 0;\r\n  width: 10px;\r\n  min-width: 10px;\r\n  max-width: 20px;\r\n  height: 10px;\r\n  min-height: 10px;\r\n  max-height: 20px;\r\n  overflow: hidden;\r\n  column-count: 2;\r\n  column-width: 0;\r\n\r\n  //ENTER -- code line break\r\n\r\n/* Typography */\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n  font-style: italic;\r\n  font-weight: 500;\r\n  letter-spacing: 1px;\r\n  line-height: 1;\r\n  color: red;\r\n  text-align: left;\r\n  text-decoration: underline;\r\n  text-indent: 1px;\r\n  text-overflow: ellipsis;\r\n  text-rendering: optimizeLegibility;\r\n  text-shadow: 1px 1px 2px pink;\r\n  text-transform: uppercase;\r\n  word-spacing: 1px;\r\n  word-break: break-word;\r\n  white-space: normal;\r\n  hyphens: auto;\r\n  list-style-type: square;\r\n  list-style-position: inside;\r\n  list-style-image: none;\r\n\r\n  //ENTER -- code line break\r\n\r\n/* Visuals */\r\n  background-attachment: fixed;\r\n  background-color: red;\r\n  background-image: url(...);\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  border: 1px red solid;\r\n  border-top: 1px red solid;\r\n  border-right: 1px red solid;\r\n  border-bottom: 1px red solid;\r\n  border-left: 1px red solid;\r\n  border-width: 1px;\r\n  border-top-width: 1px;\r\n  border-right-width: 1px;\r\n  border-bottom-width: 1px;\r\n  border-left-width: 1px;\r\n  border-color: red;\r\n  border-top-color: red;\r\n  border-right-color: red;\r\n  border-bottom-color: red;\r\n  border-left-color: red;\r\n  border-style: solid;\r\n  border-top-style: solid;\r\n  border-right-style: solid;\r\n  border-bottom-style: solid;\r\n  border-left-style: solid;\r\n  border-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border-top-left-radius: 5px;\r\n  border-image: none;\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n  outline: none;\r\n  outline-offset: 0;\r\n  box-shadow: 10px 5px 5px red;\r\n  background-clip: padding-box;\r\n\r\n  //ENTER -- code line break\r\n\r\n// Misc\r\n  opacity: 1;\r\n  visibility: visible;\r\n  cursor: pointer;\r\n  pointer-events: auto;\r\n  user-select: auto;\r\n  direction: ltr;\r\n  backface-visibility: hidden;\r\n  filter: blur(5px);\r\n  transition: all 3s ease;\r\n  transition-property: all;\r\n  transition-duration: 3s;\r\n  transition-timing-function: ease;\r\n  transition-delay: 1s;\r\n  transform: scale(1);\r\n  animation: slidein 3s ease-in 1s infinite reverse both running;\r\n  animation-name: slidein;\r\n  animation-duration: 3s;\r\n  animation-timing-function: ease;\r\n  animation-delay: 3s;\r\n  animation-iteration-count: infinite;\r\n  animation-fill-mode: forwards;\r\n  animation-play-state: running;\r\n\r\n  //ENTER -- code line break\r\n\r\n//Pseudo elements\r\n  &:before {\r\n    content: '';\r\n\r\n    /* Positioning */\r\n    /* Display */\r\n    /* Typography */\r\n    /* Visuals */\r\n    // Misc\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n\r\n    /* Positioning */\r\n    /* Display */\r\n    /* Typography */\r\n    /* Visuals */\r\n    // Misc\r\n  }\r\n\r\n  //on-behavior in this order:\r\n  &:hover,\r\n  &:active,\r\n  &:focus,\r\n  &:visited,\r\n  &:checked,\r\n  &:default,\r\n  &:empty,\r\n  &:enabled,\r\n  &:disabled,\r\n  &:in-range,\r\n  &:out-of-range,\r\n  &:indeterminate,\r\n  &:valid,\r\n  &:invalid,\r\n  &:target {\r\n    display: none;\r\n  }\r\n\r\n  &::placeholder,\r\n  &::selection,\r\n  &::first-letter,\r\n  &::first-line {\r\n    display: none;\r\n  }\r\n\r\n  //parent-children pseudo classes: https://css-tricks.com/useful-nth-child-recipies/\r\n  &:first-child,\r\n  &:nth-child(even),\r\n  &:nth-last-child(n),\r\n  &:last-child,\r\n  &:only-child {\r\n    display: none;\r\n  }\r\n\r\n  &:first-of-type,\r\n  &:nth-of-type(odd),\r\n  &:nth-last-of-type(n),\r\n  &:last-of-type,\r\n  &:only-of-type {\r\n    display: none;\r\n  }\r\n\r\n  //Other browser specific stuff\r\n  &::-ms-clear {\r\n    display: none;\r\n  }\r\n\r\n  &::-webkit-specific-stuff,\r\n  &::-moz-specific-stuff,\r\n  &::-o-specific-stuff {\r\n    display: none;\r\n  }\r\n\r\n  //CSS Ancestry Selectors\r\n  & .another-class {\r\n    /* another-class is a child of parent-class */\r\n  }\r\n\r\n  > .another-class {\r\n    /* another-class is a direct descendant of parent-class */\r\n  }\r\n\r\n  ~ .another-class {\r\n    /* another-class is preceded by parent-class */\r\n  }\r\n\r\n  + .another-class {\r\n    /* another-class is immediately placed after parent-class */\r\n  }  \r\n\r\n  //Attribute-Value Pairs\r\n  input[type='text'] {\r\n    \r\n  }\r\n}\r\n`\r\n}\r\n</SyntaxHighlighter>\r\n\r\nexport default cssStyeDeclaration","import React from 'react'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter'\r\n\r\nimport { cssHighlightProps, htmlHighlightProps } from '../common/highlighter-config'\r\n\r\nconst htmlRules = [\r\n  {\r\n    id: ``,\r\n    rule: `HTML5 doctype: Enforce standards mode and more consistent rendering in every browser possible with this simple doctype at the beginning of every HTML page.`,\r\n    summary: `Use HTML5 doctype`,\r\n    example:\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<!DOCTYPE html>`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Language Attribute: Encouraged to specify a lang attribute on the root html element, giving the document’s language.`,\r\n    summary: `Add a language attribute`,\r\n    example:\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<html lang=\"en-us\">\r\n  <!-- ... -->\r\n</html>`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `IE Compatibility Mode: Internet Explorer supports the use of a document compatibility <meta> tag to specify what version of IE the page should be rendered as:`,\r\n    summary: `Add meta tags for IE Compatibility Mode`,\r\n    example:\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Character Encoding: Quickly and easily ensure proper rendering of your content by declaring an explicit character encoding.`,\r\n    summary: `Add character encoding`,\r\n    example:\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<head>\r\n  <meta charset=\"UTF-8\">\r\n</head>`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Nested elements should be tabbed once.`,\r\n    summary: `Nested elements should be tabbed once`,\r\n    example:\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<head>\r\n  <title>Page title</title>\r\n</head>`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Use double quotes (\"), never single quotes ('), on attributes.`,\r\n    summary: `Use double quotes (\") on attributes`,\r\n    example:\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<body>\r\n  <h1 class=\"hello\">Hello, world!</h1>\r\n</body>`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Include a trailing slash in self-closing elements. This is to be consistent with JS frameworks like React.`,\r\n    summary: `Include a trailing slash in self-closing elements`,\r\n    example:\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<body>\r\n  <img src=\"img/logo.png\" alt=\"Company\" />\r\n</body>`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `HTML attributes should come in this particular order for easier reading of code.`,\r\n    summary: `Follow HTML attribute order`,\r\n    example:\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<div id=\"...\" class=\"...\" data-abc=\"...\">Foo</div>\r\n\r\n<a href=\"#\" id=\"...\" class=\"...\" data-toggle=\"modal\">Link</a>\r\n\r\n<input id=\"my-id\" class=\"form-control\" type=\"text\" />\r\n\r\n<img src=\"...\" id=\"...\" class=\"...\" alt=\"...\" />`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Reduce markup. It is always best to keep the codes to a minimum. This will help in reading the code and speed up the loading speed (above-the-fold content).`,\r\n    summary: `Reduce markup`,\r\n    example:\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<!-- Not so great -->\r\n<span class=\"avatar\">\r\n  <img src=\"...\" />\r\n</span>\r\n\r\n<!-- Better -->\r\n<img class=\"avatar\" src=\"...\" />`}    \r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Style emphases (bold, italics, etc.) with CSS. Don't use outdated HTML tags like <b></b> and <u></u>.`,\r\n    summary: `Style emphases (bold, italics, etc.) with CSS`,\r\n    example: <div>\r\n<SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<!-- DON'T -->\r\n<u>I am underlined</u>\r\n\r\n<!-- DO -->\r\n<span class=\"underline\">I am underlined</span>`}\r\n</SyntaxHighlighter>\r\n<SyntaxHighlighter {...cssHighlightProps}>\r\n{`.underline {\r\n  text-decoration: underline;\r\n}`}    \r\n</SyntaxHighlighter>\r\n</div>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Use a separate js-class when manipulating elements with scripts/jquery. (Not applicable for JS frameworks like React)`,\r\n    summary: `Use a separate js-class when manipulating elements with jquery `,\r\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<!-- DON'T -->\r\n<div class=\"manipulate\"></div>\r\n<script>\r\n  $('.manipulate').on('click', () => console.log('clicked'));\r\n</script>\r\n\r\n<!-- DO -->\r\n<div class=\"manipulate js-manipulate\"></div>\r\n<script>\r\n  $('.js-manipulate').on('click', () => console.log('clicked'));\r\n</script>`}\r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Avoid naming classes similar to reserved Bootstrap/3rd-party plugins' classes to avoid confusion of context.`,\r\n    summary: `Avoid naming classes similar to reserved Booststrap/plugins' classes`,\r\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<!-- DON'T -->\r\n<div class=\"sample-container\">\r\n  <!-- 'container' is a Bootstrap class -->\r\n</div>\r\n\r\n<!-- DO -->\r\n<div class=\"sample-wrapper\">\r\n  ...\r\n</div>`}\r\n</SyntaxHighlighter>   \r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `On naming of classes, put 'context' prior 'item detail' for proper clustering and easier context understanding.`,\r\n    summary: `Put context prior item detail`,\r\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<!-- DON'T -->\r\n<span class=\"search-icon\"></span>\r\n<span class=\"hamburger-icon\"></span>\r\n<span class=\"fb-icon\"></span>\r\n\r\n<!-- DO -->\r\n<span class=\"icon-search\"></span>\r\n<span class=\"icon-hamburger\"></span>\r\n<span class=\"icon-fb\"></span>`}\r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Provide proper types for inputs. Improper type settings affects form validations`,\r\n    summary: `Provide proper type for inputs`,\r\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<!-- DON'T -->\r\n<input type=\"text\" placeholder=\"Name\" />\r\n<input type=\"text\" placeholder=\"Email\" />\r\n<input type=\"text\" placeholder=\"Phone\" />\r\n<input type=\"text\" placeholder=\"Password\" />\r\n\r\n<!-- DO -->\r\n<input type=\"text\" placeholder=\"Name\" />\r\n<input type=\"email\" placeholder=\"Email\" />\r\n<input type=\"tel\" placeholder=\"Phone\" />\r\n<input type=\"password\" placeholder=\"Password\" />`}\r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Use ordinal over cardinal words when naming elements based on their layout. Cardinal terms like 'left' and 'right' are confusing for RTL Bidirectional layouts`,\r\n    summary: `Use ordinal over cardinal words when naming elements based on their layout`,\r\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\r\n{`<!-- DON'T -->\r\n<div class=\"left-side\"></div>\r\n<div class=\"right-side\"></div>\r\n\r\n<!-- DO -->\r\n<div class=\"first-side\"></div>\r\n<div class=\"second-side\"></div>`}\r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Use 'wrapper' as parent level container and 'holder' if there are nested containers inside. If you need another container inside after 'holder', this is usually a sign of bad HTML structure or poor implementation of flex. Restructure your elements.`,\r\n    summary: `Use 'wrapper' then 'holder' for nested containers`,\r\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\r\n{`\r\n<div class=\"something-wrapper\">\r\n  ...\r\n  <div class=\"something-holder\">\r\n    ...\r\n  </div>\r\n</div>\r\n`}\r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Attach '-wrapper' after context when using custom containers (something-wrapper, something-holder). To resolve the issue where multiple holder (image-holder, text-holder) of multiple types that may conflict with the rule above where semantic context precedes specifc context (icon-fb, icon-tw, etc.), group multiple types into a collective term.`,\r\n    summary: `Attach '-wrapper' after context when using custom containers (something-wrapper)`,\r\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\r\n{` <!-- DON'T -->\r\n<div class=\"something-wrapper\">\r\n  <div class=\"image-holder\">...</div>\r\n  <div class=\"text-holder\">...</div>\r\n</div>\r\n\r\n<!-- DO -->\r\n<div class=\"something-wrapper\">\r\n  <div class=\"card-holder\"></div>\r\n</div>\r\n`}\r\n</SyntaxHighlighter>\r\n  },\r\n  {\r\n    id: ``,\r\n    rule: `Use 'id' only when an element has a unique behavior. Use 'class' for styles. Use 'js-class' for generic/group behavior`,\r\n    summary: `Use 'id' only when an element has a unique behavior`,\r\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\r\n{` <!-- DON'T -->\r\n<div id=\"sample-one\">\r\n  ...\r\n  <div id=\"accordion-one\">Header 1</div>\r\n  <div id=\"accordion-two\">Header 2</div>\r\n  <div id=\"accordion-three\">Header 3</div>\r\n</div>\r\n\r\n<style>\r\n  #sample-one {\r\n    //Don't style id's\r\n  }\r\n</style>\r\n\r\n<script>\r\n  $('#accordion-one')...\r\n</script>\r\n\r\n<!-- DO -->\r\n<div class=\"sample-one\">\r\n  ...\r\n  <div class=\"js-accordion\">Header 1</div>\r\n  <div class=\"js-accordion\">Header 2</div>\r\n  <div class=\"js-accordion\">Header 3</div>\r\n</div>\r\n\r\n<style>\r\n  .sample-one {\r\n    //Style classes instead\r\n  }\r\n</style>\r\n\r\n<script>\r\n  $('.js-accordion')...\r\n</script>\r\n`}\r\n</SyntaxHighlighter>\r\n  },\r\n]\r\n\r\nexport default htmlRules","export const copyStringToClipboard = str => {\r\n  // Create new element\r\n  var el = document.createElement('textarea');\r\n  // Set value (string to be copied)\r\n  el.value = str;\r\n  // Set non-editable to avoid focus and move outside of view\r\n  el.setAttribute('readonly', '');\r\n  el.style = {position: 'absolute', left: '-9999px'};\r\n  document.body.appendChild(el);\r\n  // Select text inside element\r\n  el.select();\r\n  // Copy text to clipboard\r\n  document.execCommand('copy');\r\n  // Remove temporary element\r\n  document.body.removeChild(el);\r\n}\r\n\r\nexport const slugify = text => text.toString().toLowerCase().trim()\r\n  .replace(/&/g, '-and-') // Replace & with 'and'\r\n  .replace(/[\\s\\W-]+/g, '-') // Replace spaces, non-word characters and dashes with a single dash (-)","import React, { useEffect } from 'react'\r\nimport { HashLink } from 'react-router-hash-link'\r\n\r\nimport stickybits from 'stickybits'\r\n\r\nimport '../stylesheets/main.scss'\r\nimport cssRules from '../content/css-rules'\r\nimport cssStyeDeclaration from '../content/css-declaration-order'\r\nimport htmlRules from '../content/html-rules'\r\nimport { copyStringToClipboard, slugify } from '../common/utils'\r\n\r\nfunction OffsetHashLink(props) {\r\n  const scrollWithOffset = (el, offset) => {\r\n    const elementPosition = el.offsetTop - offset\r\n\r\n    window.scroll({\r\n      top: elementPosition,\r\n      left: 0,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <HashLink\r\n      {...props}\r\n      scroll={el => scrollWithOffset(el, props.offset === false ? 0 : 90)}\r\n    >\r\n      {props.children}  \r\n    </HashLink>\r\n  )\r\n}\r\n\r\nfunction CategoryHash(props) {\r\n  return (\r\n    <OffsetHashLink \r\n      to={`#${props.to}`} \r\n      className={'hash hash--lg'}\r\n      offset={false}\r\n    >\r\n      #\r\n    </OffsetHashLink>\r\n  )\r\n}\r\n\r\nfunction RuleIteration(props) {\r\n  const copyUrl = hash => {\r\n    const baseUrl = `https://psdwizard.github.io/coding-guidelines/#/`\r\n    copyStringToClipboard(`${baseUrl}#${hash}`)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.arr.map((item, i) => (\r\n        <div \r\n          key={i} \r\n          id={slugify(item.summary)}\r\n          className=\"section\"\r\n        >\r\n          <div className=\"base-width section-flex\">\r\n            <div className=\"rule hash-parent\">\r\n              <span>\r\n                {item.rule} \r\n                <span>\r\n                  &nbsp;\r\n                  <OffsetHashLink \r\n                    to={`#${slugify(item.summary)}`} \r\n                    className=\"hash hash--sm\"\r\n                    onClick={() => copyUrl(slugify(item.summary))}\r\n                  >\r\n                    #\r\n                  </OffsetHashLink>\r\n                </span>\r\n              </span>\r\n            </div>\r\n            <div className=\"sample\">\r\n              {item.example}\r\n            </div>\r\n          </div>\r\n        </div>\t\t\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nfunction Home() {    \r\n  const scrollToTop = () => {\r\n    window.scrollTo(0,0)\r\n  }\r\n\r\n  useEffect(() =>{\r\n    console.log(stickybits)\r\n    stickybits('.category')\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"back-to-top\" onClick={scrollToTop}>\r\n        <img src={require('../assets/images/up-caret.svg')} className=\"caret\" alt=\"Up caret\" width=\"25\" />\r\n        <img src={require('../assets/images/nyan.png')} className=\"cat\" alt=\"Fullstack HQ mascot\" />\r\n      </div>\r\n      <div id=\"summary\" className=\"section category hash-parent\">\r\n        <span className=\"base-width\">\r\n          Summary\r\n          <CategoryHash to=\"summary\"/>\r\n        </span>        \r\n      </div>\r\n      <div className=\"section\">\r\n        <ul className=\"base-width summary-list rule-monocol\">\r\n          <li>\r\n            <OffsetHashLink to=\"#golden-rule\" offset={false}>Golden Rule: Every line of code should appear to be written by a single person</OffsetHashLink>\r\n          </li>\r\n          <li>\r\n            <OffsetHashLink to=\"#silver-rule\" offset={false}>Silver Rule: Special client requests supercede any of the rules below.</OffsetHashLink>\r\n          </li>\r\n          <li>\r\n            <OffsetHashLink to=\"#declaration-order\" offset={false}>CSS Style Declaration Ideal Order</OffsetHashLink>\r\n          </li>\r\n          <li>\r\n            <OffsetHashLink to=\"#css-rules\" offset={false}>CSS Rules:</OffsetHashLink>\r\n            <ul>\r\n              {cssRules.map((item, i) => \r\n                <li key={i}>\r\n                  <OffsetHashLink to={`#${slugify(item.summary)}`}>\r\n                    {item.summary}\r\n                  </OffsetHashLink>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <OffsetHashLink to=\"#html-rules\" offset={false}>HTML Rules: </OffsetHashLink>\r\n            <ul>\r\n              {htmlRules.map((item, i) => \r\n                <li key={i}>\r\n                  <OffsetHashLink to={`#${slugify(item.summary)}`}>\r\n                    {item.summary}\r\n                  </OffsetHashLink>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div id=\"golden-rule\" className=\"section category hash-parent\">\r\n        <span className=\"base-width\">\r\n          Golden Rule\r\n          <CategoryHash to=\"golden-rule\"/>\r\n        </span>\r\n      </div>\r\n      <div className=\"section\">\r\n        <div className=\"base-width section-flex\">\r\n          <div className=\"rule\">\r\n            Enforce these agreed upon guidelines at all times. Small or large, call out what's incorrect. This applies for everyone, project members and leaders alike.\r\n          </div>\r\n          <div className=\"sample hljs\">\r\n            Every line of code should appear to be written by a single person, no matter the number of contributors.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"silver-rule\" className=\"section category hash-parent\">\r\n        <span className=\"base-width\">\r\n          Silver Rule\r\n          <CategoryHash to=\"silver-rule\"/>\r\n        </span>\r\n      </div>\r\n      <div className=\"section\">\r\n        <div className=\"base-width section-flex\">\r\n          <div className=\"rule\">\r\n            Special client requests supercede any of the rules below.\r\n          </div>\r\n          <div className=\"sample hljs\">\r\n            This is held true for all and any rule types.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"css-rules\" className=\"section category hash-parent\">\r\n        <span className=\"base-width\">\r\n          CSS Rules\r\n          <CategoryHash to=\"css-rules\"/>\r\n        </span>\r\n      </div>\r\n\r\n      <RuleIteration arr={cssRules} />\r\n\r\n      <div id=\"declaration-order\" className=\"section category hash-parent\">\r\n        <span className=\"base-width\">\r\n          CSS Style Declaration Ideal Order\r\n          <CategoryHash to=\"declaration-order\" />\r\n        </span>        \r\n      </div>\r\n      <div className=\"section rule-monocol\">\r\n        <div className=\"base-width\">\r\n          {cssStyeDeclaration}\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"html-rules\" className=\"section category hash-parent\">\r\n        <span className=\"base-width\">\r\n          HTML Rules\r\n          <CategoryHash to=\"html-rules\" />\r\n        </span>        \r\n      </div>\r\n      \r\n      <RuleIteration arr={htmlRules} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home"],"sourceRoot":""}