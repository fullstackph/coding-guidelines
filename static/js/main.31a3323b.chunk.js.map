{"version":3,"sources":["App.js","components/header.js","containers/home.js","serviceWorker.js","index.js","containers/404.js"],"names":["App","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","basename","className","_components_header__WEBPACK_IMPORTED_MODULE_9__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","path","exact","component","Home","NoRouteMatch","Component","hot","module","Header","style","fontSize","cssHighlightProps","language","useInlineStyles","htmlHighlightProps","cssRules","rule","example","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_6__","Object","assign","CodeTag","PreTag","cssStyeDeclaration","htmlRules","map","item","i","key","padding","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","is404"],"mappings":"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","file":"static/js/main.31a3323b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { \n  HashRouter, \n  Route,\n  Switch,\n} from 'react-router-dom'\nimport { hot } from 'react-hot-loader'\n\nimport Header from './components/header'\n// import Footer from './components/footer'\nimport Home from './containers/home'\nimport NoRouteMatch from './containers/404'\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <div className=\"App\">\n          <Header />\n\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route component={NoRouteMatch} />\n          </Switch>\n\n          {/* <Footer /> */}\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default hot(module)(App);\n","import React, { Component } from 'react'\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header>\n        <div>Fullstack HQ - Frontend Guidelines</div>\n        <div style={{fontSize: '10px'}}>inspired by Code Guide by @mdo</div>\n      </header>\n    )\n  }\n}","import React, { Component } from 'react'\n\nimport SyntaxHighlighter from 'react-syntax-highlighter'\n\nimport '../stylesheets/main.scss'\n\nconst cssHighlightProps = {\n  language: 'scss',\n  useInlineStyles: false\n}\n\nconst htmlHighlightProps = {\n  language: 'html',\n  useInlineStyles: false\n}\n\nconst cssRules = [\n  {\n    rule: `Always leave a line space between each section. Even when a class has a single property.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`.foo {\n  ...\n}\n\n.bar {\n  ...\n  ...\n}`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Avoid using !important.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.foo {\n  display: none !important;\n}\n\n//DO\n.bar {\n  ...\n  \n  .foo {\n    display: none;\n  }\n}`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Preconfigure your IDE to use soft tabs with two spaces.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`.foo {\n  display: block;\n}`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `When grouping selectors, keep individual selectors to a single line.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.foo, .bar {\n  display: block;\n}\n\n//DO\n.foo, \n.bar {\n  display: block;\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: <span>Don't include spaces after commas within <SyntaxHighlighter {...cssHighlightProps} CodeTag=\"span\" PreTag=\"span\">rgb(), rgba(), hsl(), hsla(), or rect()</SyntaxHighlighter> values. This helps differentiate multiple color values (comma, no space) from multiple property values (comma with space).</span>,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.foo {\n  background-color: rgba(0, 0, 0, .5);\n}\n\n//DO\n.foo {\n  background-color: rgba(0,0,0,.5);\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Remove leading zeroes for prefix property values or color parameters.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.foo {\n  margin: -0.5px;\n\n  background-color: rgba(0,0,0,0.5);\n}\n\n//DO\n.foo {\n  margin: -.5px;\n\n  background-color: rgba(0,0,0,.5);\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Avoid specifying units for zero values, e.g., margin: 0; instead of margin: 0px;.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.foo {\n  margin: 0px;\n}\n\n//DO\n.foo {\n  margin: 0;\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Use shorthand hex values where available (e.g., #fff instead of #ffffff).`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.foo {\n  color: #ffffff;\n}\n\n//DO\n.foo {\n  color: #fff;\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Lowercase all hex values (e.g., #fff).`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.foo {\n  color: #FFF;\n}\n\n//DO\n.foo {\n  color: #fff;\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Quote attribute values in selectors, e.g., input[type=”text”]. They’re only optional in some cases, and it’s a good practice for consistency. Avoid using this type of selectors when input type is bound to change. Attribute value changes from HTML side will cause style inconsistencies.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.selector[type=text] {\n  ...\n}\n\n//DO\n.selector[type=\"text\"] {\n  ...\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Always add appropriate cursor types and transitions to inputs and elements with special behaviors`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//<button class=\"click-me\">Clickable</button>\n.click-me {\n  cursor: pointer;\n  transition: color .2s ease-in-out;\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Keep classes lowercase and use dashes (not underscores or camelCase). Dashes serve as natural breaks in related class.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.fooBar,\n.foo_bar {\n  ...\n}\n\n//DO\n.foo-bar {\n  ...\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Keep selectors short and strive to limit the number of elements in each selector to three.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.section-header-card-wrapper {\n  ...\n}\n\n//DO\n.card-wrapper {\n  ...\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Always put a single space between the property and value and no space between the property and the colon.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.foo {\n  padding : 1px;\n  margin:1px;\n}\n\n//DO\n.foo {\n  padding: 1px;\n}\n`}    \n</SyntaxHighlighter>\n  },\n\n  // {\n  //   rule: `Reuse your codes as much as possible to minimize the size of files.`,\n  // },\n  // {\n  //   rule: `Mixins are always after the Miscellaneous section for sass (e.g., @include, @extend).`,\n  // },\n  {\n    rule: `Use @extend first before declaring other property values. Use other mixins like @include as needed. Be careful with @extend and other custom mixins. Establish @extend relationship only when the style is certainly extendable (e.g. buttons, links, etc.)`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`.bar {\n  padding: 1px;\n  ...\n}\n\n.foo {\n  @extend .bar;\n\n  padding: 2px;\n}\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Put all media queries in a block at the very end. Even if they include one property value only. Media queries shall be put at the parent level, and never nested as a child. Arrange theme from large to small.`,\n    example:\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.foo {\n  ...\n\n  @include respond-to(lg-down) {\n    ...\n  }\n}\n\n//DO\n.foo {\n  ...\n}\n\n@include respond-to(lg-down) {\n  ... \n}\n\n@include respond-to(sm-down) {\n  ...\n}`}    \n</SyntaxHighlighter>\n  },\n  // {\n  // \trule: `The rule above can be overruled when the query only applies to a single selector.`,\n  // },\n  {\n    rule: `Nest on sass if and only if the children components are extremely dependent on parent element`,\n    example: \n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.class-a {\n  .class-b {\n    ...\n\n    .class-c {\n      ...\n    }\n  }\n\n  .class-d {\n    ...\n\n    p {\n      ...\n    }\n\n    ul {\n      ...\n\n      li {\n        ...\n      }\n    }\n  }\n}\n\n//DO\n.class-a {\n  ...\n}\n\n.class-b {\n  ...\n}\n\n.class-c {\n  ...\n}\n\n.class-d {\n  ...\n  \n  p {\n    ...\n  }\n\n  li {\n    ...\n  }\n}`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Use classes to avoid deep nesting and for specific context. Except when dealing with 3rd party plugin/CMS content generated HTML nodes where customization of classes is not possible.`,\n    example: \n<SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.class-a {\n  ...\n\n  .class-d {\n    ...\n\n    p {\n      ...\n    }\n  }\n}\n\n//DO\n.class-a {\n  ...\n}\n\n.class-d {\n  ...\n  \n  .class-for-p //p {\n    ...\n  }\n}`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Generic Nesting Guide`,\n    example: \n<SyntaxHighlighter {...cssHighlightProps}>\n{`.page-container { //i.e. <main class=\"home\">\n  .outer-wrapper { //first tab - wrapper\n    .child-element { //second tab - child element\n      &:hover { //third tab - pseudo-elements\n        background-color: #fff;\n      }\n\n      &:before {\n        content: 'a';\n      }\n    }\n    \n    .child-with-dependent { //second tab - child with extreme dependency\n      .i-am-dependent { //third tab - avoid me if you can\n        &:hover { //fourth and ideally final tab - pseudo of extreme dependency\n          color: #000;\n        }\n      }\n    }\n  }\n}\n\n`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Declare font variants as font-weights and not separate font-families`,\n    example: \n<SyntaxHighlighter {...cssHighlightProps}>\n{`@include font-face($font-proximanova, $base-url + 'fonts/', 'proxima-light', 'proximia-light', 300);\n@include font-face($font-proximanova, $base-url + 'fonts/', 'proxima-regular', 'proximia-regular', 400);\n@include font-face($font-proximanova, $base-url + 'fonts/', 'proxima-semibold', 'proximia-semibold', 500);\n@include font-face($font-proximanova, $base-url + 'fonts/', 'proxima-bold', 'proximia-bold', 600);`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Always use colors as variable, all located at _variables.scss. Use contextual phrases for primary and secondary palettes. Use numerics for neutral shades in increments of 100's`,\n    example: \n<SyntaxHighlighter {...cssHighlightProps}>\n{`$primary-color: #ffc30b;\n$secondary-color: #fadase;\n\n$gray-100: ...\n$gray-200: ...\n$gray-300: ...\n$gray-400: ...`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Always use colors as variable, all located at _variables.scss`,\n    example: \n<SyntaxHighlighter {...cssHighlightProps}>\n{`$yellow: #ffc30b;\n$yellow-lemon: #fadase;\n$yellow-mellow: #f8de7e;`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: <div>\n      Strive to limit use of shorthand declarations to instances where you must explicitly set all the available values. Common overused shorthand properties include:\n        <SyntaxHighlighter {...cssHighlightProps}>\n{`padding\nmargin\nfont\nbackground\nborder\nborder-radius`}\n        </SyntaxHighlighter>\n        Often times we don't need to set all the values a shorthand property represents. For example, HTML headings only set top and bottom margin, so when necessary, only override those two values. Excessive use of shorthand properties often leads to sloppier code with unnecessary overrides and unintended side effects.\n    </div>,\n    example: <SyntaxHighlighter {...cssHighlightProps}>\n{`//DON'T\n.class {\n  font: 400 16px $myfont;\n}\n\n//DO\n.class {\n  font-family: $myfont;\n  font-size: 16px;\n  font-weight: 400;\n}`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Whenever efficient, use sass loops and native sass functions.`,\n    example: <div>\n<SyntaxHighlighter {...cssHighlightProps}>\n{`//Example:\n//Declare $my-item as list\n$my-item: red green blue;\n\n.parent-class {\n  //Each loop\n  @each $my-item in $my-list {\n    //Variable $i assignment via index() sass native function\n    $i: index($my-item, $my-list);\n    &:nth-of-type(#{$i}) {\n      background-color: $my-item;\n    }\n  }\n}\n\n// Compiles to:\n  .parent-class:nth-of-type(1) {\n    background-color: red;\n  }\n\n  .parent-class:nth-of-type(2) {\n    background-color: green;\n  }\n\n  .parent-class:nth-of-type(3) {\n    background-color: blue;\n  }\n`}\n</SyntaxHighlighter>\n</div>\n  },\n  {\n    rule: `For dynamic styles, avoid the CSS-in-JS approach. Manipulate classes instead.`,\n    example: <div>\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<!-- DON'T -->\n<div class=\"normal js-manipulate\"></div>\n<script>\n  $('.js-manipulate').click(() => {\n    var $this = $(this);\n    $this.css('color', 'red');\n  })\n</script>\n\n<!-- DO -->\n<div class=\"normal js-manipulate\"></div>\n<script>\n  $('.js-manipulate').click(() => {\n    var $this = $(this);\n    $this.toggleClass('status-class');\n  })\n</script>\n<style>\n  .normal {\n    display: block;\n\n    &.status-class {\n      display: none\n    }\n  }\n</style>\n`}\n</SyntaxHighlighter>\n</div>\n  },\n]\n\nconst cssStyeDeclaration = <SyntaxHighlighter {...cssHighlightProps}>\n{`.class {\n  @extend .another-class;\n\n/* Positioning */\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n\n  //ENTER -- code line break\n\n/* Display */\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  flex-basis: 100%;\n  flex-grow: 1;\n  flex-shrink: 0;\n  order: -1;\n  vertical-align: middle;\n  float: left;\n  clear: both;\n  padding: 0;\n  padding-top: 0;\n  padding-right: 0;\n  padding-bottom: 0;\n  padding-left: 0;\n  margin: 0;\n  margin-top: 0;\n  margin-right: 0;\n  margin-bottom: 0;\n  margin-left: 0;\n  width: 10px;\n  min-width: 10px;\n  max-width: 20px;\n  height: 10px;\n  min-height: 10px;\n  max-height: 20px;\n  overflow: hidden;\n  column-count: 2;\n  column-width: 0;\n\n  //ENTER -- code line break\n\n/* Typography */\n  font-family: sans-serif;\n  font-size: 16px;\n  font-style: italic;\n  font-weight: 500;\n  letter-spacing: 1px;\n  line-height: 1;\n  color: red;\n  text-align: left;\n  text-decoration: underline;\n  text-indent: 1px;\n  text-overflow: ellipsis;\n  text-rendering: optimizeLegibility;\n  text-shadow: 1px 1px 2px pink;\n  text-transform: uppercase;\n  word-spacing: 1px;\n  word-break: break-word;\n  white-space: normal;\n  hyphens: auto;\n  list-style-type: square;\n  list-style-position: inside;\n  list-style-image: none;\n\n  //ENTER -- code line break\n\n/* Visuals */\n  background-attachment: fixed;\n  background-color: red;\n  background-image: url(...);\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  border: 1px red solid;\n  border-top: 1px red solid;\n  border-right: 1px red solid;\n  border-bottom: 1px red solid;\n  border-left: 1px red solid;\n  border-width: 1px;\n  border-top-width: 1px;\n  border-right-width: 1px;\n  border-bottom-width: 1px;\n  border-left-width: 1px;\n  border-color: red;\n  border-top-color: red;\n  border-right-color: red;\n  border-bottom-color: red;\n  border-left-color: red;\n  border-style: solid;\n  border-top-style: solid;\n  border-right-style: solid;\n  border-bottom-style: solid;\n  border-left-style: solid;\n  border-radius: 5px;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-left-radius: 5px;\n  border-image: none;\n  border-collapse: collapse;\n  border-spacing: 0;\n  outline: none;\n  outline-offset: 0;\n  box-shadow: 10px 5px 5px red;\n  background-clip: padding-box;\n\n  //ENTER -- code line break\n\n// Misc\n  opacity: 1;\n  visibility: visible;\n  cursor: pointer;\n  pointer-events: auto;\n  user-select: auto;\n  direction: ltr;\n  backface-visibility: hidden;\n  filter: blur(5px);\n  transition: all 3s ease;\n  transition-property: all;\n  transition-duration: 3s;\n  transition-timing-function: ease;\n  transition-delay: 1s;\n  transform: scale(1);\n  animation: slidein 3s ease-in 1s infinite reverse both running;\n  animation-name: slidein;\n  animation-duration: 3s;\n  animation-timing-function: ease;\n  animation-delay: 3s;\n  animation-iteration-count: infinite;\n  animation-fill-mode: forwards;\n  animation-play-state: running;\n\n  //ENTER -- code line break\n\n//Pseudo elements\n  &:before {\n    content: '';\n\n    /* Positioning */\n    /* Display */\n    /* Typography */\n    /* Visuals */\n    // Misc\n  }\n\n  &:after {\n    content: '';\n\n    /* Positioning */\n    /* Display */\n    /* Typography */\n    /* Visuals */\n    // Misc\n  }\n\n  //on-behavior in this order:\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited,\n  &:checked,\n  &:default,\n  &:empty,\n  &:enabled,\n  &:disabled,\n  &:in-range,\n  &:out-of-range,\n  &:indeterminate,\n  &:valid,\n  &:invalid,\n  &:target {\n    display: none;\n  }\n\n  &::placeholder,\n  &::selection,\n  &::first-letter,\n  &::first-line {\n    display: none;\n  }\n\n  //parent-children pseudo classes: https://css-tricks.com/useful-nth-child-recipies/\n  &:first-child,\n  &:nth-child(even),\n  &:nth-last-child(n),\n  &:last-child,\n  &:only-child {\n    display: none;\n  }\n\n  &:first-of-type,\n  &:nth-of-type(odd),\n  &:nth-last-of-type(n),\n  &:last-of-type,\n  &:only-of-type {\n    display: none;\n  }\n\n  //Other browser specific stuff\n  &::-ms-clear {\n    display: none;\n  }\n\n  &::-webkit-specific-stuff,\n  &::-moz-specific-stuff,\n  &::-o-specific-stuff {\n    display: none;\n  }\n\n  //CSS Ancestry Selectors\n  & .another-class {\n    /* another-class is a child of parent-class */\n  }\n\n  > .another-class {\n    /* another-class is a direct descendant of parent-class */\n  }\n\n  ~ .another-class {\n    /* another-class is preceded by parent-class */\n  }\n\n  + .another-class {\n    /* another-class is immediately placed after parent-class */\n  }  \n\n  //Attribute-Value Pairs\n  input[type='text'] {\n    \n  }\n}\n`\n}\n</SyntaxHighlighter>\n\nconst htmlRules = [\n  {\n    rule: `HTML5 doctype: Enforce standards mode and more consistent rendering in every browser possible with this simple doctype at the beginning of every HTML page.`,\n    example:\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<!DOCTYPE html>`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Language Attribute: Encouraged to specify a lang attribute on the root html element, giving the document’s language.`,\n    example:\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<html lang=\"en-us\">\n  <!-- ... -->\n</html>`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `IE Compatibility Mode: Internet Explorer supports the use of a document compatibility <meta> tag to specify what version of IE the page should be rendered as:`,\n    example:\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Character Encoding: Quickly and easily ensure proper rendering of your content by declaring an explicit character encoding.`,\n    example:\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<head>\n  <meta charset=\"UTF-8\">\n</head>`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Nested elements should be indented once (two spaces).`,\n    example:\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<head>\n  <title>Page title</title>\n</head>`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Always use double quotes, never single quotes, on attributes.`,\n    example:\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<body>\n  <h1 class=\"hello\">Hello, world!</h1>\n</body>`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Include a trailing slash in self-closing elements. This is to be consistent with JS frameworks like React.`,\n    example:\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<body>\n  <img src=\"img/logo.png\" alt=\"Company\" />\n</body>`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `HTML attributes should come in this particular order for easier reading of code.`,\n    example:\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<div id=\"...\" class=\"...\" data-abc=\"...\">Foo</div>\n\n<a href=\"#\" id=\"...\" class=\"...\" data-toggle=\"modal\">Link</a>\n\n<input id=\"my-id\" class=\"form-control\" type=\"text\" />\n\n<img src=\"...\" id=\"...\" class=\"...\" alt=\"...\" />`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Reducing Markup: It is always best to keep the codes to a minimum. This will help in reading the code and speed up the loading speed (above-the-fold content). *case-to-case basis.`,\n    example:\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<!-- Not so great -->\n<span class=\"avatar\">\n  <img src=\"...\" />\n</span>\n\n<!-- Better -->\n<img class=\"avatar\" src=\"...\" />`}    \n</SyntaxHighlighter>\n  },\n  {\n    rule: `Do not use outdated HTML tags like <b></b> and <u></u>. Style typographical emphases with CSS instead.`,\n    example: <div>\n<SyntaxHighlighter {...htmlHighlightProps}>\n{`<!-- DON'T -->\n<u>I am underlined</u>\n\n<!-- DO -->\n<span class=\"underline\">I am underlined</span>`}\n</SyntaxHighlighter>\n<SyntaxHighlighter {...cssHighlightProps}>\n{`.underline {\n  text-decoration: underline;\n}`}    \n</SyntaxHighlighter>\n</div>\n  },\n  {\n    rule: `Use a separate js-class when manipulating elements with scripts/jquery`,\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\n{`<!-- DON'T -->\n<div class=\"manipulate\"></div>\n<script>\n  $('.manipulate').on('click', () => console.log('clicked'));\n</script>\n\n<!-- DO -->\n<div class=\"manipulate js-manipulate\"></div>\n<script>\n  $('.js-manipulate').on('click', () => console.log('clicked'));\n</script>`}\n</SyntaxHighlighter>\n  },\n  {\n    rule: `Avoid classes that are similar to reserved classes for Bootstrap/3rd Party Plugins to avoid confusion of context.`,\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\n{`<!-- DON'T -->\n<div class=\"my-container\">\n  <!-- 'container' is a Bootstrap class -->\n</div>\n\n<!-- DO -->\n<div class=\"my-wrapper\">\n  ...\n</div>`}\n</SyntaxHighlighter>   \n  },\n  {\n    rule: `On naming of classes, put 'context' prior 'item detail' for proper clustering and easier context understanding.`,\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\n{`<!-- DON'T -->\n<span class=\"search-icon\"></span>\n<span class=\"hamburger-icon\"></span>\n<span class=\"fb-icon\"></span>\n\n<!-- DO -->\n<span class=\"icon-search\"></span>\n<span class=\"icon-hamburger\"></span>\n<span class=\"icon-fb\"></span>`}\n</SyntaxHighlighter>\n  },\n  {\n    rule: `Provide proper type for inputs. Improper type settings affects form validations`,\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\n{`<!-- DON'T -->\n<input type=\"text\" placeholder=\"Name\" />\n<input type=\"text\" placeholder=\"Email\" />\n<input type=\"text\" placeholder=\"Phone\" />\n<input type=\"text\" placeholder=\"Password\" />\n\n<!-- DO -->\n<input type=\"text\" placeholder=\"Name\" />\n<input type=\"email\" placeholder=\"Email\" />\n<input type=\"tel\" placeholder=\"Phone\" />\n<input type=\"password\" placeholder=\"Password\" />`}\n</SyntaxHighlighter>\n  },\n  {\n    rule: `When naming elements based on position, use ordinal over cardinal. Cardinal terms like 'left' and 'right' are confusing for RTL Bidirectional layouts`,\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\n{`<!-- DON'T -->\n<div class=\"left-side\"></div>\n<div class=\"right-side\"></div>\n\n<!-- DO -->\n<div class=\"first-side\"></div>\n<div class=\"second-side\"></div>`}\n</SyntaxHighlighter>\n  },\n  {\n    rule: `Use 'wrapper' as parent level container and 'holder' if there are nested containers inside. If you need another container inside after 'holder', this is usually a sign of bad HTML structure or poor implementation of flex. Restructure your elements.`,\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\n{`\n<div class=\"something-wrapper\">\n  ...\n  <div class=\"something-holder\">\n    ...\n  </div>\n</div>\n`}\n</SyntaxHighlighter>\n  },\n  {\n    rule: `Follow 'something-wrapper' and 'something-holder' as class name order when using custom containers. To resolve the issue where multiple holder (image-holder, text-holder) of multiple types that may conflict with the rule above where semantic context precedes specifc context (icon-fb, icon-tw, etc.), group multiple types into a collective term.`,\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\n{` <!-- DON'T -->\n<div class=\"something-wrapper\">\n  <div class=\"image-holder\">...</div>\n  <div class=\"text-holder\">...</div>\n</div>\n\n<!-- DO -->\n<div class=\"something-wrapper\">\n  <div class=\"card-holder\"></div>\n</div>\n`}\n</SyntaxHighlighter>\n  },\n  {\n    rule: `Use 'id' only when an element has a unique behavior. Use 'class' for styles. Use 'js-class' for generic/group behavior`,\n    example: <SyntaxHighlighter {...htmlHighlightProps}>\n{` <!-- DON'T -->\n<div id=\"sample-one\">\n  ...\n  <div id=\"accordion-one\">Header 1</div>\n  <div id=\"accordion-two\">Header 2</div>\n  <div id=\"accordion-three\">Header 3</div>\n</div>\n\n<style>\n  #sample-one {\n    //Don't style id's\n  }\n</style>\n\n<script>\n  $('#accordion-one')...\n</script>\n\n<!-- DO -->\n<div class=\"sample-one\">\n  ...\n  <div class=\"js-accordion\">Header 1</div>\n  <div class=\"js-accordion\">Header 2</div>\n  <div class=\"js-accordion\">Header 3</div>\n</div>\n\n<style>\n  .sample-one {\n    //Style classes instead\n  }\n</style>\n\n<script>\n  $('.js-accordion')...\n</script>\n`}\n</SyntaxHighlighter>\n  },\n]\nexport default class Home extends Component {\n  render() {    \n    return (\n      <div className=\"container\">\n        <div className=\"row row-category\">CSS Rules</div>\n        {\n          cssRules.map((item, i) => (\n            <div className=\"row\" key={i}>\n              <div className=\"rule\">\n                {item.rule}\n              </div>\n              <div className=\"sample\">\n                {item.example}\n              </div>\n            </div>\t\t\n          ))\n        }\n\n        <div className=\"row row-category\">CSS Style Declaration Ideal Order</div>\n        <div className=\"row\" style={{padding: '60px 40px', fontSize: '32px'}}>\n          {cssStyeDeclaration}\n        </div>\n\n        <div className=\"row row-category\">HTML Rules</div>\n        {\n          htmlRules.map((item, i) => (\n            <div className=\"row\" key={i}>\n              <div className=\"rule\">\n                {item.rule}\n              </div>\n              <div className=\"sample\">\n                {item.example}\n              </div>\n            </div>\t\t\n          ))\n        }\n        \n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\n\nexport default class is404 extends Component {\n  render() {\n    return (\n      <div>404 page</div>\n    )\n  }\n}"],"sourceRoot":""}